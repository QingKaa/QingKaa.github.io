import{_ as i,r as s,o as l,c as u,b as a,w as r,a as n,d as t,e as k}from"./app-OdtGcBzi.js";const d={},m=n("h1",{id:"按顺序同步加载图片",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#按顺序同步加载图片"},[n("span",null,"按顺序同步加载图片")])],-1),v=["src"],g=n("blockquote",null,[n("p",null,[t("每次只能同时加载一张图片，等待图片加载完成后再加载下一张图片。"),n("br"),t(" 给定一个图片地址数组，每次只能同时加载一个，加载完成当前后才能加载下一项。")])],-1),b={href:"https://qingkaa.github.io/demo/#/other/singleLoadImg",target:"_blank",rel:"noopener noreferrer"},f=k(`<h2 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路"><span>实现思路</span></a></h2><p><strong>加载图片的方法：</strong> 返回一个Promise，再Promise中创建<code>Image</code> 并且设置 src 以及 其他需要的属性，在 Image 的 onload 事件中 resolve 出去。<br><strong>Promise链式调用：</strong> 根据图片地址列表组成一个Promise数组，通过reduce方法执行每一项，并且返回下一项的Promise。</p><p><strong>代码实现</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">LoadImgResult</span> <span class="token punctuation">{</span>
    success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
    img<span class="token operator">?</span><span class="token operator">:</span> HTMLImageElement
<span class="token punctuation">}</span>
<span class="token keyword">const</span> baseUrl <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> imgPaths <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img1.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img0.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img3.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img4.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img5.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">image/imgLoad/img6.jpg</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> imgContent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 加载图片的方法</span>
<span class="token keyword">const</span> <span class="token function-variable function">loadImg</span> <span class="token operator">=</span> <span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fn<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>LoadImgResult<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        img<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
        img<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;img-item&#39;</span><span class="token punctuation">)</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> img <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这里可以做错误处理，并且直接返回 resolve，这样在 initImgs中可以更加简洁</span>
            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> errMsg<span class="token operator">:</span> e <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> fn
<span class="token punctuation">}</span>

<span class="token comment">// 按顺序加载每一项图片</span>
<span class="token keyword">function</span> <span class="token function">initImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> loadImgsPromise<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>LoadImgResult<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    imgPaths<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>path <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        loadImgsPromise<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">loadImg</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    loadImgsPromise<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 可以把这部分操作也放到 loadImg 里面去，无伤大雅</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    imgContent<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>img<span class="token operator">!</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39; 图片加载失败 =====&gt; e:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span>initImgs<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function h(p,_){const o=s("PostInfo"),e=s("PostImg"),c=s("ExternalLinkIcon");return l(),u("div",null,[m,a(o),a(e,null,{default:r(()=>[n("img",{class:"w-full",src:p.$withBase("/images/js_loadimg/poster.jpg")},null,8,v)]),_:1}),g,n("p",null,[n("a",b,[t("演示地址"),a(c)])]),f])}const w=i(d,[["render",h],["__file","同步加载图片.html.vue"]]),y=JSON.parse('{"path":"/blog/js%E5%9F%BA%E7%A1%80/%E5%90%8C%E6%AD%A5%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87.html","title":"按顺序同步加载图片","lang":"zh-CN","frontmatter":{"title":"按顺序同步加载图片","date":"2024-04-17","tags":["JavaScript","DOM"],"poster":"/images/js_loadimg/poster.jpg","author":"清咖","category":"js基础"},"headers":[{"level":2,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]}],"git":{"updatedTime":1714407085000,"contributors":[{"name":"清咔","email":"874518796@qq.com","commits":6}]},"filePathRelative":"blog/js基础/同步加载图片.md"}');export{w as comp,y as data};
