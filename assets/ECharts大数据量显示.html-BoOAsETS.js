import{_ as p,r as o,o as r,c as i,b as a,a as n,d as s,e as t}from"./app-C32PFIio.js";const c="/assets/render_demo-BhTBDM0a.png",d={},u=n("h1",{id:"echarts大数据量显示优化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#echarts大数据量显示优化"},[n("span",null,"ECharts大数据量显示优化")])],-1),h=n("h2",{id:"示例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#示例"},[n("span",null,"示例")])],-1),m=n("p",null,[s("demo 截图： "),n("img",{src:c,alt:"示例截图"})],-1),k={href:"https://qingkaa.github.io/demo/#/echarts/bigdatavender",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="基本情况" tabindex="-1"><a class="header-anchor" href="#基本情况"><span>基本情况</span></a></h2><p>以下均基于 <code>&quot;echarts&quot;: &quot;^5.5.0&quot;</code> 版本。加载时间会与设备有关。</p><p>面对大数据量时，ECharts默认的显示效果会很差:</p><ol><li>加载时间长。</li><li>页面卡顿。</li><li>tooltip 显示非常慢。</li></ol><p>十万条数据测试直接渲染大概需要 3 ~ 5s，tooltip 显示简直无法直视。</p><h2 id="使用-datazoom" tabindex="-1"><a class="header-anchor" href="#使用-datazoom"><span>使用 dataZoom</span></a></h2><blockquote><p>dataZoom 组件常用于区域缩放，只显示一部分数据。</p></blockquote><p>使用了dataZoom的情况下渲染基本上都是毫秒级，tooltip 显示也是是否流畅（前提是不能同时显示太多数据）</p><p>使用dataZoom可以有效的优化以上问题，不过需要注意的是，当数据量十分大的时候需要限制 dataZoom 的范围(maxSpan)，不然随着显示区域的增大，也会变得非常卡顿。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code> <span class="token keyword">let</span> options<span class="token operator">:</span> EChartsOption <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">,</span>
    dataZoom<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token string">&#39;slider&#39;</span><span class="token punctuation">,</span> <span class="token comment">// slider | inside</span>
        xAxisIndex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        end<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        minSpan<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 限制最小显示范围</span>
        maxSpan<span class="token operator">:</span> <span class="token number">5</span> <span class="token comment">// 限制最大显示范围</span>
    <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),v={href:"https://echarts.apache.org/zh/option.html#dataZoom",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"降采样策略-sampling-lttb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#降采样策略-sampling-lttb"},[n("span",null,"降采样策略 sampling: 'lttb'")])],-1),g=n("p",null,[s("折线图在数据量远大于像素点时候的降采样策略，开启后可以有效的优化图表的绘制效率，默认关闭，也就是全部绘制不过滤数据点。"),n("br"),s(" 可选：")],-1),E=n("br",null,null,-1),f=n("br",null,null,-1),x=n("br",null,null,-1),C=n("br",null,null,-1),y=n("br",null,null,-1),q=n("br",null,null,-1),B={href:"https://echarts.apache.org/zh/option.html#series-line.sampling",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>用了降采样策略的情况下由渲染到肉眼可见也基本是秒开，只是tooltip则惨不忍睹(丢失严重甚至无法显示出来)。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> options<span class="token operator">:</span> EChartsOption <span class="token operator">=</span><span class="token punctuation">{</span>
    series<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// ...</span>
                type<span class="token operator">:</span> <span class="token string">&#39;line&#39;</span><span class="token punctuation">,</span>
                smooth<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                sampling<span class="token operator">:</span> <span class="token string">&#39;lttb&#39;</span><span class="token punctuation">,</span><span class="token comment">//</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="large-与-largethreshold" tabindex="-1"><a class="header-anchor" href="#large-与-largethreshold"><span>large 与 largeThreshold</span></a></h2>`,3),D=n("br",null,null,-1),z=n("br",null,null,-1),Z=n("br",null,null,-1),I={href:"https://echarts.apache.org/zh/option.html#series-bar.large",target:"_blank",rel:"noopener noreferrer"},T=t(`<p><strong>特别注意</strong>，large 只能在 bar, scatter, candlestick, lines 使用，其他图表不支持。</p><p>不过效果是真的好，非常丝滑。渲染速度毫秒级，tooltip 显示正常，也不卡顿。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> options<span class="token operator">:</span> EChartsOption <span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    series<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
            data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>seriesData<span class="token punctuation">]</span><span class="token punctuation">,</span>
            type<span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
            large<span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="echartsinstance-appenddata" tabindex="-1"><a class="header-anchor" href="#echartsinstance-appenddata"><span>echartsInstance.appendData</span></a></h2><p>略过~~</p><p>这是一个echarts实例的方法，用于分片加载数据。不是一次性加载数据，而是分批加载，在把加载的数据合并到已经渲染的图里面去，渲染新加入的数据块时不会清除原有已经渲染的部分。</p>`,6),N=n("p",null,[s("此接口用于，在大数据量（百万以上）的渲染场景，分片加载数据和增量渲染。"),n("br"),s(" 注意：")],-1),L=n("br",null,null,-1),S={href:"https://echarts.apache.org/zh/api.html#echartsInstance.appendData",target:"_blank",rel:"noopener noreferrer"},O=n("p",null,"END",-1);function V(w,G){const l=o("PostInfo"),e=o("ExternalLinkIcon");return r(),i("div",null,[u,a(l),h,m,n("p",null,[n("a",k,[s("demo传送门"),a(e)])]),b,n("p",null,[s("合理的配置可以极大的提升流畅性。关于 dataZoom 的配置可以参考 "),n("a",v,[s("官方文档"),a(e)]),s("。")]),_,n("blockquote",null,[g,n("p",null,[s("'lttb' 采用 Largest-Triangle-Three-Bucket 算法，可以最大程度保证采样后线条的趋势，形状和极值。"),E,s(" 'average' 取过滤点的平均值"),f,s(" 'min' 取过滤点的最小值"),x,s(" 'max' 取过滤点的最大值"),C,s(" 'minmax' 取过滤点绝对值的最大极值 (从 v5.5.0 开始支持)"),y,s(" 'sum' 取过滤点的和"),q,n("a",B,[s("文档说明"),a(e)])])]),A,n("blockquote",null,[n("p",null,[s("是否开启大数据量优化，在数据图形特别多而出现卡顿时候可以开启。"),D,s(" 开启后配合 largeThreshold 在数据量大于指定阈值的时候对绘制进行优化。"),z,s(" 缺点：优化后不能自定义设置单个数据项的样式。"),Z,n("a",I,[s("官方文档"),a(e)])])]),T,n("blockquote",null,[N,n("p",null,[s("现在不支持 系列（series） 使用 dataset 同时使用 appendData，只支持系列使用自己的 series.data 时使用 appendData。 目前并非所有的图表都支持分片加载时的增量渲染。目前支持的图有：ECharts 基础版本的 散点图（scatter） 和 线图（lines）。ECharts GL 的 散点图（scatterGL）、线图> （linesGL） 和 可视化建筑群（polygons3D）。"),L,n("a",S,[s("官方文档"),a(e)])])]),O])}const F=p(d,[["render",V],["__file","ECharts大数据量显示.html.vue"]]),j=JSON.parse(`{"path":"/blog/ECharts/Echarts%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E6%98%BE%E7%A4%BA/ECharts%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E6%98%BE%E7%A4%BA.html","title":"ECharts大数据量显示","lang":"zh-CN","frontmatter":{"title":"ECharts大数据量显示","date":"2024-04-30","author":"清咖","poster":"/images/poster/echart_poster.jpg","tags":["ECharts"],"category":"ECharts"},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"基本情况","slug":"基本情况","link":"#基本情况","children":[]},{"level":2,"title":"使用 dataZoom","slug":"使用-datazoom","link":"#使用-datazoom","children":[]},{"level":2,"title":"降采样策略 sampling: 'lttb'","slug":"降采样策略-sampling-lttb","link":"#降采样策略-sampling-lttb","children":[]},{"level":2,"title":"large 与 largeThreshold","slug":"large-与-largethreshold","link":"#large-与-largethreshold","children":[]},{"level":2,"title":"echartsInstance.appendData","slug":"echartsinstance-appenddata","link":"#echartsinstance-appenddata","children":[]}],"git":{"updatedTime":1717466371000,"contributors":[{"name":"清咔","email":"874518796@qq.com","commits":2}]},"filePathRelative":"blog/ECharts/Echarts大数据量显示/ECharts大数据量显示.md"}`);export{F as comp,j as data};
